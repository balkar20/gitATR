/**
 * Реализовать две функции repeat, sequence
 *
 * Напиши функцию создания генератора sequence(start, step).
 * Она при вызове возвращает другую функцию-генератор,
 * которая при каждом вызове дает число на 1 больше, и так до бесконечности.
 *
 * Начальное число, с которого начинать отсчет, и шаг, задается при создании генератора.
 * Шаг можно не указывать, тогда он будет равен одному. Начальное значение по умолчанию равно 0.
 * Генераторов можно создать сколько угодно.
 *
 * @param start - начальное число, с которого начинать отсчет.
*                 Начальное значение по умолчанию равно 0.
 * @param step -  шаг, задается при создании генератора.
 *                Шаг можно не указывать, тогда он будет равен одному
 *
 * @return function - вызове возвращает другую функцию-генератор,
 * которая при каждом вызове дает число начиная с start на step больше, и так до бесконечности
 */
function sequence(start, step) {
    if (step === undefined) {
        step = 1
    }else if(start === undefined){
        start = 0;
    }
    start -= step;
    return function() {
        return start += step;
    }
}
/**
 * Функция вызвает функцию func заданное число (times) раз
 *
 * @param func - функция, которая будет вызываться
 * @param times - сколько раз нужно вызвать функцию func
 */
function repeat(fun, n) {
    for (var i = 0; i < n; i++) {
        console.log(fun());
    }
}

var generator = sequence(10, 3);
var generator2 = sequence(0, 2);

console.log(generator()); // 10
console.log(generator()); // 13

console.log(generator2()); // 0

repeat(generator2, 5); // [2, 4, 6, 8, 10]

/**
 * Реализовать конструктор для созадния гамбургером с описанными методами ниже.
 * Необходимо оформить с помощью шаблона "Модуль".
 *
 * Класс, объекты которого описывают параметры гамбургера.
 *
 * @constructor
 * @param size        Размер
 * @param stuffing    Начинка
 */
/////
/////
/////
//////////////////////В файле MyScriptHamburger